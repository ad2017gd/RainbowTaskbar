<UserControl x:Class="RainbowTaskbar.Editor.Pages.Controls.InstructionControls.ColorInstructionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RainbowTaskbar.Editor.Pages.Controls.InstructionControls" xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             xmlns:instructions="clr-namespace:RainbowTaskbar.Configuration.Instruction.Instructions"
xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:converters="clr-namespace:RainbowTaskbar.Editor.Pages.Controls.InstructionControls.Converters" xmlns:loc="clr-namespace:RainbowTaskbar.Languages"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../../Languages/en_US.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:ColorConverter x:Key="ColorConverter" />
            <loc:EnumTranslator x:Key="EnumTranslator" />

            <ObjectDataProvider x:Key="ColorInstructionEffect" ObjectType="{x:Type s:Enum}" MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="instructions:ColorInstruction+ColorInstructionEffect" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="ColorInstructionTransition" ObjectType="{x:Type s:Enum}" MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="instructions:ColorInstruction+ColorInstructionTransition" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
        

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical">
            <StackPanel Orientation="Horizontal">
                <ComboBox x:Name="SelectedEffect"
                                        SelectedItem="{Binding SelectedInstruction.Effect}"
                                        
                                        ItemsSource="{Binding Source={StaticResource ColorInstructionEffect}}">

                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Path=., Converter={StaticResource EnumTranslator}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <ComboBox Margin="5,0,0,0" x:Name="SelectedTransition"
                                        SelectedItem="{Binding SelectedInstruction.Transition}"
                                        ItemsSource="{Binding Source={StaticResource ColorInstructionTransition}}">

                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="ComboBox.Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SelectedEffect, Path=SelectedItem}"
                                             Value="Fade">
                                    <Setter Property="ComboBox.Visibility" Value="Visible" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=SelectedEffect, Path=SelectedItem}"
                                             Value="FadeGradient">
                                    <Setter Property="ComboBox.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Path=., Converter={StaticResource EnumTranslator}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <CheckBox Checked="Randomize_Checked" Unchecked="Randomize_Checked" x:Name="Randomize"
                          Margin="10,0,0,0" VerticalAlignment="Center" Content="{DynamicResource randomize}"
                          IsChecked="{Binding SelectedInstruction.Randomize}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                <TextBlock FontSize="14" Text="{DynamicResource holdtime}" Margin="0,0,10,0" VerticalAlignment="Center" />
                <Slider IsSnapToTickEnabled="True" TickFrequency="1" Minimum="1" Maximum="5000"
                        Value="{Binding SelectedInstruction.Time}" HorizontalAlignment="Left" VerticalAlignment="Center"
                        Width="240" />
                <ui:NumberBox Value="{Binding SelectedInstruction.Time}" x:Name="SelectedTime" Margin="5,0,0,0" HorizontalAlignment="Left" 
                          VerticalAlignment="Top" SpinButtonPlacementMode="Hidden" ClearButtonEnabled="False">


                </ui:NumberBox>
                <TextBlock FontSize="14" Text="{DynamicResource milliseconds}" Margin="5,0,10,0" VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                <xctk:ColorPicker x:Name="ColorPicker1" SelectedColorChanged="ColorPicker1_SelectedColorChanged" 
                                  ShowTabHeaders="False"
                                  ColorMode="ColorCanvas"
                                  UsingAlphaChannel="True" Margin="0,0,5,0" Width="75"
                                  DropDownBackground="{DynamicResource ComboBoxDropDownBackground}"
                                  Background="{DynamicResource ComboBoxDropDownBackground}"
                                  SelectedColor="{Binding SelectedInstruction.Color1, Converter={StaticResource ColorConverter}}" >
                </xctk:ColorPicker>

                <xctk:ColorPicker x:Name="ColorPicker2" SelectedColorChanged="ColorPicker1_SelectedColorChanged"
                                  UsingAlphaChannel="True" Width="75"
                                  ShowTabHeaders="False"
                                  DropDownBackground="{DynamicResource ComboBoxDropDownBackground}"
                                  Background="{DynamicResource ComboBoxDropDownBackground}"
                                  ColorMode="ColorCanvas"
                                  SelectedColor="{Binding SelectedInstruction.Color2, Converter={StaticResource ColorConverter}}">

                    <xctk:ColorPicker.Style>
                        <Style>
                            <Setter Property="xctk:ColorPicker.Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SelectedEffect, Path=SelectedItem}"
                                             Value="Gradient">
                                    <Setter Property="xctk:ColorPicker.Visibility" Value="Visible" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=SelectedEffect, Path=SelectedItem}"
                                             Value="FadeGradient">
                                    <Setter Property="xctk:ColorPicker.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </xctk:ColorPicker.Style>
                </xctk:ColorPicker>

                <StackPanel.Style>
                    <Style>
                        <Setter Property="StackPanel.Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Randomize, Path=IsChecked}" Value="True">
                                <Setter Property="StackPanel.Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
            <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                <StackPanel.Style>
                    <Style>
                        <Setter Property="StackPanel.Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=SelectedEffect, Path=SelectedItem}"
                                         Value="FadeGradient">
                                <Setter Property="StackPanel.Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=SelectedEffect, Path=SelectedItem}" Value="Fade">
                                <Setter Property="StackPanel.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <TextBlock FontSize="14" Text="{DynamicResource fadetime}" Margin="0,0,10,0" VerticalAlignment="Center"/>
                <Slider IsSnapToTickEnabled="True" TickFrequency="1" Minimum="0" Maximum="5000"
                        Value="{Binding SelectedInstruction.Time2}" HorizontalAlignment="Left" VerticalAlignment="Center"
                        Width="240" />
                <ui:NumberBox ClearButtonEnabled="False" Value="{Binding SelectedInstruction.Time2}" x:Name="SelectedTime2" Margin="5,0,0,0" HorizontalAlignment="Left" 
                          VerticalAlignment="Top" SpinButtonPlacementMode="Hidden">


                </ui:NumberBox>
                <TextBlock FontSize="14" Text="{DynamicResource milliseconds}" Margin="5,0,10,0" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                <StackPanel.Style>
                    <Style>
                        <Setter Property="StackPanel.Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=SelectedEffect, Path=SelectedItem}"
                                         Value="Gradient">
                                <Setter Property="StackPanel.Visibility" Value="Visible" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=SelectedEffect, Path=SelectedItem}"
                                         Value="FadeGradient">
                                <Setter Property="StackPanel.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <TextBlock FontSize="14" Text="{DynamicResource gradientangle}" Margin="0,0,10,0" VerticalAlignment="Center" />
                <ui:NumberBox ClearButtonEnabled="False" SpinButtonPlacementMode="Hidden" Name="AnglePicker" Value="{Binding SelectedInstruction.Angle}"  Minimum="0" Maximum="360" />
            </StackPanel>

        </StackPanel>
        <StackPanel Grid.Row="2" Orientation="Vertical" Margin="0,5,0,0" >
            <StackPanel Margin="0,10" Orientation="Horizontal">
                <TextBlock FontSize="14" Text="{DynamicResource layer}" Margin="0,0,10,0" VerticalAlignment="Center" />
                <ui:NumberBox  Value="{Binding SelectedInstruction.Layer}" ClearButtonEnabled="False"
                                   Minimum="0" Maximum="15" />


            </StackPanel>
            <StackPanel HorizontalAlignment="Center">
                <Canvas Margin="0,0,0,5" x:Name="Preview" Width="450" Height="40">
                <Rectangle Canvas.Left="0" Canvas.Top="0" Width="450" Height="40">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="LightGray" />
                    </Rectangle.Fill>
                </Rectangle>
                <Label Margin="150,0,0,0" Content="This is some text." />
                <Label Margin="150,12,0,0" Foreground="White" Content="Color preview!" />
                <Rectangle Name="PreviewRectangle" Opacity="0.8" Canvas.Left="0" Canvas.Top="0" Width="450" Height="40" />

                <Rectangle Width="10" Height="10" Canvas.Top="10" Canvas.Left="8" RadiusX="1" RadiusY="1" Fill="#2af" />
                <Rectangle Width="10" Height="10" Canvas.Top="10" Canvas.Left="19" RadiusX="1" RadiusY="1" Fill="#2af" />
                <Rectangle Width="10" Height="10" Canvas.Top="21" Canvas.Left="8" RadiusX="1" RadiusY="1" Fill="#2af" />
                <Rectangle Width="10" Height="10" Canvas.Top="21" Canvas.Left="19" RadiusX="1" RadiusY="1" Fill="#2af" />

                <TextBlock Width="440" Height="20" TextAlignment="Right" Margin="0,12,0,0" Foreground="White"
                           Text="22:11" />

            </Canvas>
            </StackPanel>

        </StackPanel>
    </Grid>
</UserControl>
