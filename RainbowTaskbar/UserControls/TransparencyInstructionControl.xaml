<UserControl x:Class="RainbowTaskbar.UserControls.TransparencyInstructionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:RainbowTaskbar"
             xmlns:instructions="clr-namespace:RainbowTaskbar.Configuration.Instructions"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:loc="clr-namespace:RainbowTaskbar.Languages"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:TransparencyStyleNameValueConverter x:Key="TransparencyStyleName"/>
        <local:FloatToPercentageValueConverter x:Key="FloatToPercentage" />
        <loc:EnumTranslator x:Key="EnumTranslator" />

        <ObjectDataProvider x:Key="TransparencyInstructionType" ObjectType="{x:Type s:Enum}" MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="instructions:TransparencyInstruction+TransparencyInstructionType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="TransparencyInstructionStyle" ObjectType="{x:Type s:Enum}" MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="instructions:TransparencyInstruction+TransparencyInstructionStyle" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <StackPanel Orientation="Horizontal">
                <Label VerticalAlignment="Center" Content="{DynamicResource change}"></Label>
                <ComboBox Margin="5,0,0,0" x:Name="SelectedType"
                                    SelectedItem="{Binding SelectedInstruction.Type}"
                                    ItemsSource="{Binding Source={StaticResource TransparencyInstructionType}}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Path=.,Converter={StaticResource EnumTranslator}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    
                </ComboBox>
                <Label Margin="5,0,0,0" VerticalAlignment="Center" Content="{DynamicResource to}">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource DefaultLabelStyle}">
                            <Setter Property="ComboBox.Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=SelectedType, Path=SelectedItem}" Value="Style">
                                    <Setter Property="ComboBox.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
            <ComboBox Margin="5,0,0,0" SelectedItem="{Binding SelectedInstruction.Style}"
                                    ItemsSource="{Binding Source={StaticResource TransparencyInstructionStyle}}">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBoxStyle}">
                        <Setter Property="ComboBox.Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=SelectedType, Path=SelectedItem}" Value="Style">
                                <Setter Property="ComboBox.Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Label Content="{Binding Path=., Converter={StaticResource EnumTranslator}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,5,0,0">
            <StackPanel.Style>
                <Style>
                    <Setter Property="StackPanel.Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SelectedType, Path=SelectedItem}" Value="Style">
                            <Setter Property="StackPanel.Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>


            <Slider IsSnapToTickEnabled="True" TickFrequency="1" Minimum="0" Maximum="100"
                    Value="{Binding SelectedInstruction.Opacity, Converter={StaticResource FloatToPercentage}}"
                    HorizontalAlignment="Left" VerticalAlignment="Top" Width="240" />
            <TextBox x:Name="SelectedTime" Margin="5,0,0,0" HorizontalAlignment="Left" TextWrapping="NoWrap"
                      VerticalAlignment="Top" Width="100">
                <TextBox.Text>
                    <Binding Path="SelectedInstruction.Opacity"
                             Converter="{StaticResource FloatToPercentage}"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnNotifyDataErrors="True"
                             ValidatesOnDataErrors="True"
                             NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <local:NumericValidationRule ValidationType="{x:Type s:Int32}"
                                                         NumMinValue="0"
                                                         NumMaxValue="100"
                                                         ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock FontSize="14" Text="%" Margin="0,0,10,0" VerticalAlignment="Center" />
        </StackPanel>
        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,5,0,0">
            <StackPanel.Style>
                <Style>
                    <Setter Property="StackPanel.Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SelectedType, Path=SelectedItem}" Value="Layer">
                            <Setter Property="StackPanel.Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <TextBlock FontSize="14" Text="{DynamicResource layer}" Margin="0,0,10,0" />
            <ui:NumberBox Value="{Binding SelectedInstruction.Layer}" Width="75" Minimum="0" Maximum="15" />
        </StackPanel>
        <StackPanel Grid.Row="4" Orientation="Horizontal">
            <Canvas Margin="0,0,0,5" x:Name="Preview" Width="450" Height="40">

                <Grid>
                    <Grid.Style>
                        <Style>

                            <Style.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedInstruction.Type}" Value="Style" />
                                        <Condition Binding="{Binding SelectedInstruction.Style}" Value="Blur" />

                                    </MultiDataTrigger.Conditions>

                                    <Setter Property="Grid.Effect">
                                        <Setter.Value>
                                            <BlurEffect Radius="15" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>


                            </Style.Triggers>
                        </Style>
                    </Grid.Style>


                    <Rectangle Canvas.Left="0" Canvas.Top="0" Width="450" Height="40">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="LightGray" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <Label Margin="150,0,0,0" Content="This is some text." />
                    <Label Margin="150,12,0,0" Foreground="White" Content="Transparency preview!" />
                </Grid>

                <Rectangle Name="PreviewRectangle" Canvas.Left="0" Canvas.Top="0" Width="450" Height="40">
                    <Rectangle.Style>
                        <Style>
                            <Setter Property="Rectangle.Fill" Value="MediumPurple" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedInstruction.Type}" Value="RainbowTaskbar">
                                    <Setter Property="Rectangle.Opacity" Value="{Binding SelectedInstruction.Opacity}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedInstruction.Type}" Value="All">
                                    <Setter Property="Rectangle.Opacity" Value="{Binding SelectedInstruction.Opacity}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding SelectedInstruction.Type}" Value="Style">
                                    <Setter Property="Rectangle.Opacity" Value="0.6" />
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedInstruction.Type}" Value="Style" />
                                        <Condition Binding="{Binding SelectedInstruction.Style}" Value="Default" />

                                    </MultiDataTrigger.Conditions>

                                    <Setter Property="Rectangle.Opacity" Value="0.96" />
                                    <Setter Property="Rectangle.Fill">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#7489E7" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Rectangle.Effect">
                                        <Setter.Value>
                                            <BlurEffect Radius="2" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>

                <Canvas>
                    <Canvas.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedInstruction.Type}" Value="Taskbar">
                                    <Setter Property="Rectangle.Opacity" Value="{Binding SelectedInstruction.Opacity}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedInstruction.Type}" Value="All">
                                    <Setter Property="Rectangle.Opacity" Value="{Binding SelectedInstruction.Opacity}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Style>

                    <Rectangle Width="10" Height="10" Canvas.Top="10" Canvas.Left="8" RadiusX="1" RadiusY="1"
                               Fill="#2af" />
                    <Rectangle Width="10" Height="10" Canvas.Top="10" Canvas.Left="19" RadiusX="1" RadiusY="1"
                               Fill="#2af" />
                    <Rectangle Width="10" Height="10" Canvas.Top="21" Canvas.Left="8" RadiusX="1" RadiusY="1"
                               Fill="#2af" />
                    <Rectangle Width="10" Height="10" Canvas.Top="21" Canvas.Left="19" RadiusX="1" RadiusY="1"
                               Fill="#2af" />

                    <TextBlock Width="440" Height="20" TextAlignment="Right" Margin="0,12,0,0" Foreground="White"
                               Text="22:11" />
                </Canvas>

            </Canvas>
        </StackPanel>
    </Grid>
</UserControl>